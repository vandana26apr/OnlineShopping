document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\App\\index.js":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":2,"line":17},"start":{"column":13,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\r\n\r\nimport Shelf from '../Shelf';\r\nimport Filter from '../Shelf/Filter';\r\nimport GithubCorner from '../github/Corner';\r\nimport FloatCart from '../FloatCart';\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <GithubCorner />\r\n    <main>\r\n      <Filter />\r\n      <Shelf />\r\n    </main>\r\n    <FloatCart />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default App;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Checkbox\\index.js":{"language":"javascript","mutants":[{"id":"3","location":{"end":{"column":4,"line":12},"start":{"column":11,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":4,"line":8},"start":{"column":22,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"5","location":{"end":{"column":4,"line":22},"start":{"column":32,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"4","location":{"end":{"column":21,"line":11},"start":{"column":16,"line":11}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"8","location":{"end":{"column":28,"line":18},"start":{"column":18,"line":18}},"mutatorName":"BooleanLiteral","replacement":"isChecked","status":"Killed"},{"id":"9","location":{"end":{"column":4,"line":42},"start":{"column":12,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"7","location":{"end":{"column":6,"line":19},"start":{"column":39,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"6","location":{"end":{"column":7,"line":19},"start":{"column":19,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Checkbox extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    handleCheckboxChange: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    isChecked: false\r\n  };\r\n\r\n  toggleCheckboxChange = () => {\r\n    const { handleCheckboxChange, label } = this.props;\r\n\r\n    this.setState(({ isChecked }) => ({\r\n      isChecked: !isChecked\r\n    }));\r\n\r\n    handleCheckboxChange(label);\r\n  };\r\n\r\n  render() {\r\n    const { label, classes } = this.props;\r\n    const { isChecked } = this.state;\r\n\r\n    return (\r\n      <div className={classes}>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={label}\r\n            checked={isChecked}\r\n            onChange={this.toggleCheckboxChange}\r\n          />\r\n\r\n          <span className=\"checkmark\">{label}</span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\Root.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":2,"line":8},"start":{"column":14,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './services/store';\r\n\r\nconst Root = ({ children, initialState = {} }) => (\r\n  <Provider store={store(initialState)}>{children}</Provider>\r\n);\r\n\r\nexport default Root;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\FloatCart\\CartProduct\\index.js":{"language":"javascript","mutants":[{"id":"10","location":{"end":{"column":4,"line":12},"start":{"column":22,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"11","location":{"end":{"column":4,"line":20},"start":{"column":22,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"12","location":{"end":{"column":6,"line":19},"start":{"column":18,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"13","location":{"end":{"column":25,"line":18},"start":{"column":20,"line":18}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"14","location":{"end":{"column":4,"line":24},"start":{"column":27,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"15","location":{"end":{"column":40,"line":23},"start":{"column":19,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"16","location":{"end":{"column":38,"line":23},"start":{"column":34,"line":23}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Killed"},{"id":"17","location":{"end":{"column":4,"line":28},"start":{"column":26,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"18","location":{"end":{"column":41,"line":27},"start":{"column":19,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"19","location":{"end":{"column":39,"line":27},"start":{"column":34,"line":27}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"21","location":{"end":{"column":44,"line":33},"start":{"column":24,"line":33}},"mutatorName":"ArithmeticOperator","replacement":"product.quantity - 1","status":"Survived"},{"id":"20","location":{"end":{"column":4,"line":35},"start":{"column":28,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"22","location":{"end":{"column":4,"line":42},"start":{"column":28,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"23","location":{"end":{"column":44,"line":40},"start":{"column":24,"line":40}},"mutatorName":"ArithmeticOperator","replacement":"product.quantity + 1","status":"Survived"},{"id":"24","location":{"end":{"column":4,"line":83},"start":{"column":12,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"27","location":{"end":{"column":33,"line":50},"start":{"column":9,"line":50}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"26","location":{"end":{"column":34,"line":48},"start":{"column":22,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"25","location":{"end":{"column":35,"line":48},"start":{"column":21,"line":48}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"28","location":{"end":{"column":33,"line":50},"start":{"column":9,"line":50}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"29","location":{"end":{"column":33,"line":50},"start":{"column":9,"line":50}},"mutatorName":"BooleanLiteral","replacement":"!this.state.isMouseOver","status":"Killed"},{"id":"30","location":{"end":{"column":33,"line":50},"start":{"column":10,"line":50}},"mutatorName":"BooleanLiteral","replacement":"this.state.isMouseOver","status":"Killed"},{"id":"31","location":{"end":{"column":6,"line":52},"start":{"column":35,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"32","location":{"end":{"column":43,"line":51},"start":{"column":20,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"35","location":{"end":{"column":50,"line":59},"start":{"column":23,"line":59}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"33","location":{"end":{"column":39,"line":55},"start":{"column":36,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"34","location":{"end":{"column":52,"line":58},"start":{"column":24,"line":58}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"36","location":{"end":{"column":48,"line":60},"start":{"column":20,"line":60}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"37","location":{"end":{"column":71,"line":64},"start":{"column":24,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"38","location":{"end":{"column":63,"line":70},"start":{"column":14,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"39","location":{"end":{"column":73,"line":75},"start":{"column":15,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"42","location":{"end":{"column":85,"line":77},"start":{"column":63,"line":77}},"mutatorName":"EqualityOperator","replacement":"product.quantity !== 1","status":"Survived"},{"id":"41","location":{"end":{"column":85,"line":77},"start":{"column":63,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"40","location":{"end":{"column":85,"line":77},"start":{"column":63,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"43","location":{"end":{"column":92,"line":77},"start":{"column":88,"line":77}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"44","location":{"end":{"column":100,"line":77},"start":{"column":95,"line":77}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Thumb from './../../Thumb';\r\nimport { formatPrice } from '../../../services/util';\r\n\r\nclass CartProduct extends Component {\r\n  static propTypes = {\r\n    product: PropTypes.object.isRequired,\r\n    removeProduct: PropTypes.func.isRequired,\r\n    changeProductQuantity: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      product: this.props.product,\r\n      isMouseOver: false\r\n    };\r\n  }\r\n\r\n  handleMouseOver = () => {\r\n    this.setState({ isMouseOver: true });\r\n  };\r\n\r\n  handleMouseOut = () => {\r\n    this.setState({ isMouseOver: false });\r\n  };\r\n\r\n  handleOnIncrease = () => {\r\n    const { changeProductQuantity } = this.props;\r\n    const { product } = this.state;\r\n    product.quantity = product.quantity + 1;\r\n    changeProductQuantity(product);\r\n  }\r\n\r\n  handleOnDecrease = () => {\r\n    const { changeProductQuantity } = this.props;\r\n    const { product } = this.state;\r\n    product.quantity = product.quantity - 1;\r\n    changeProductQuantity(product);\r\n  }\r\n\r\n  render() {\r\n    const { removeProduct } = this.props;\r\n    const { product } = this.state;\r\n\r\n    const classes = ['shelf-item'];\r\n\r\n    if (!!this.state.isMouseOver) {\r\n      classes.push('shelf-item--mouseover');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        <div\r\n          className=\"shelf-item__del\"\r\n          onMouseOver={() => this.handleMouseOver()}\r\n          onMouseOut={() => this.handleMouseOut()}\r\n          onClick={() => removeProduct(product)}\r\n        />\r\n        <Thumb\r\n          classes=\"shelf-item__thumb\"\r\n          src={require(`../../../static/products/${product.sku}_2.jpg`)}\r\n          alt={product.title}\r\n        />\r\n        <div className=\"shelf-item__details\">\r\n          <p className=\"title\">{product.title}</p>\r\n          <p className=\"desc\">\r\n            {`${product.availableSizes[0]} | ${product.style}`} <br />\r\n            Quantity: {product.quantity}\r\n          </p>\r\n        </div>\r\n        <div className=\"shelf-item__price\">\r\n          <p>{`${product.currencyFormat}  ${formatPrice(product.price)}`}</p>\r\n          <div>\r\n            <button onClick={this.handleOnDecrease} disabled={product.quantity === 1 ? true : false} className=\"change-product-button\">-</button>\r\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CartProduct;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\FloatCart\\index.js":{"language":"javascript","mutants":[{"id":"45","location":{"end":{"column":4,"line":22},"start":{"column":22,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"46","location":{"end":{"column":4,"line":26},"start":{"column":11,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"48","location":{"end":{"column":4,"line":40},"start":{"column":40,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"47","location":{"end":{"column":18,"line":25},"start":{"column":13,"line":25}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"50","location":{"end":{"column":55,"line":29},"start":{"column":9,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"51","location":{"end":{"column":55,"line":29},"start":{"column":9,"line":29}},"mutatorName":"EqualityOperator","replacement":"nextProps.newProduct === this.props.newProduct","status":"Killed"},{"id":"49","location":{"end":{"column":55,"line":29},"start":{"column":9,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"53","location":{"end":{"column":65,"line":33},"start":{"column":9,"line":33}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"52","location":{"end":{"column":6,"line":31},"start":{"column":57,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"54","location":{"end":{"column":65,"line":33},"start":{"column":9,"line":33}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"55","location":{"end":{"column":65,"line":33},"start":{"column":9,"line":33}},"mutatorName":"EqualityOperator","replacement":"nextProps.productToRemove === this.props.productToRemove","status":"Killed"},{"id":"56","location":{"end":{"column":6,"line":35},"start":{"column":67,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"57","location":{"end":{"column":65,"line":37},"start":{"column":9,"line":37}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"59","location":{"end":{"column":65,"line":37},"start":{"column":9,"line":37}},"mutatorName":"EqualityOperator","replacement":"nextProps.productToChange === this.props.productToChange","status":"Killed"},{"id":"58","location":{"end":{"column":65,"line":37},"start":{"column":9,"line":37}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"60","location":{"end":{"column":6,"line":39},"start":{"column":67,"line":37}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"62","location":{"end":{"column":35,"line":43},"start":{"column":19,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"61","location":{"end":{"column":4,"line":44},"start":{"column":25,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"63","location":{"end":{"column":33,"line":43},"start":{"column":29,"line":43}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"64","location":{"end":{"column":4,"line":48},"start":{"column":26,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"65","location":{"end":{"column":36,"line":47},"start":{"column":19,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"66","location":{"end":{"column":34,"line":47},"start":{"column":29,"line":47}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"67","location":{"end":{"column":4,"line":67},"start":{"column":27,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"68","location":{"end":{"column":37,"line":52},"start":{"column":32,"line":52}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"69","location":{"end":{"column":6,"line":59},"start":{"column":32,"line":54}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"70","location":{"end":{"column":31,"line":55},"start":{"column":11,"line":55}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"71","location":{"end":{"column":31,"line":55},"start":{"column":11,"line":55}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"72","location":{"end":{"column":31,"line":55},"start":{"column":11,"line":55}},"mutatorName":"EqualityOperator","replacement":"cp.id !== product.id","status":"Survived"},{"id":"73","location":{"end":{"column":8,"line":58},"start":{"column":33,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"74","location":{"end":{"column":36,"line":57},"start":{"column":32,"line":57}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"75","location":{"end":{"column":30,"line":61},"start":{"column":9,"line":61}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"76","location":{"end":{"column":30,"line":61},"start":{"column":9,"line":61}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"77","location":{"end":{"column":30,"line":61},"start":{"column":9,"line":61}},"mutatorName":"BooleanLiteral","replacement":"productAlreadyInCart","status":"Killed"},{"id":"78","location":{"end":{"column":6,"line":63},"start":{"column":32,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"79","location":{"end":{"column":4,"line":77},"start":{"column":30,"line":69}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"81","location":{"end":{"column":66,"line":72},"start":{"column":47,"line":72}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"80","location":{"end":{"column":66,"line":72},"start":{"column":42,"line":72}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"82","location":{"end":{"column":66,"line":72},"start":{"column":47,"line":72}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"83","location":{"end":{"column":66,"line":72},"start":{"column":47,"line":72}},"mutatorName":"EqualityOperator","replacement":"p.id !== product.id","status":"Survived"},{"id":"84","location":{"end":{"column":19,"line":73},"start":{"column":9,"line":73}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"85","location":{"end":{"column":19,"line":73},"start":{"column":9,"line":73}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"86","location":{"end":{"column":19,"line":73},"start":{"column":9,"line":73}},"mutatorName":"EqualityOperator","replacement":"index > 0","status":"Survived"},{"id":"87","location":{"end":{"column":19,"line":73},"start":{"column":9,"line":73}},"mutatorName":"EqualityOperator","replacement":"index < 0","status":"Survived"},{"id":"89","location":{"end":{"column":4,"line":97},"start":{"column":29,"line":79}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"90","location":{"end":{"column":25,"line":87},"start":{"column":9,"line":87}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"88","location":{"end":{"column":6,"line":76},"start":{"column":21,"line":73}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"91","location":{"end":{"column":25,"line":87},"start":{"column":9,"line":87}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"93","location":{"end":{"column":6,"line":89},"start":{"column":27,"line":87}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"92","location":{"end":{"column":25,"line":87},"start":{"column":9,"line":87}},"mutatorName":"BooleanLiteral","replacement":"productQuantity","status":"Survived"},{"id":"94","location":{"end":{"column":44,"line":88},"start":{"column":13,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"95","location":{"end":{"column":6,"line":96},"start":{"column":12,"line":89}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"96","location":{"end":{"column":12,"line":94},"start":{"column":9,"line":91}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"98","location":{"end":{"column":70,"line":102},"start":{"column":39,"line":102}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"97","location":{"end":{"column":4,"line":108},"start":{"column":45,"line":99}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":70,"line":102},"start":{"column":44,"line":102}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"100","location":{"end":{"column":70,"line":102},"start":{"column":44,"line":102}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"101","location":{"end":{"column":70,"line":102},"start":{"column":44,"line":102}},"mutatorName":"EqualityOperator","replacement":"p.id !== changedProduct.id","status":"Survived"},{"id":"102","location":{"end":{"column":30,"line":104},"start":{"column":9,"line":104}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"104","location":{"end":{"column":30,"line":104},"start":{"column":9,"line":104}},"mutatorName":"EqualityOperator","replacement":"product.quantity < 0","status":"Survived"},{"id":"103","location":{"end":{"column":30,"line":104},"start":{"column":9,"line":104}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"105","location":{"end":{"column":30,"line":104},"start":{"column":9,"line":104}},"mutatorName":"EqualityOperator","replacement":"product.quantity > 0","status":"Survived"},{"id":"106","location":{"end":{"column":6,"line":106},"start":{"column":32,"line":104}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"107","location":{"end":{"column":4,"line":194},"start":{"column":12,"line":110}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"108","location":{"end":{"column":6,"line":117},"start":{"column":44,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"109","location":{"end":{"column":33,"line":119},"start":{"column":19,"line":119}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"110","location":{"end":{"column":32,"line":119},"start":{"column":20,"line":119}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"112","location":{"end":{"column":28,"line":121},"start":{"column":9,"line":121}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"111","location":{"end":{"column":28,"line":121},"start":{"column":9,"line":121}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"113","location":{"end":{"column":28,"line":121},"start":{"column":9,"line":121}},"mutatorName":"BooleanLiteral","replacement":"!this.state.isOpen","status":"Survived"},{"id":"115","location":{"end":{"column":6,"line":123},"start":{"column":30,"line":121}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"114","location":{"end":{"column":28,"line":121},"start":{"column":10,"line":121}},"mutatorName":"BooleanLiteral","replacement":"this.state.isOpen","status":"Survived"},{"id":"117","location":{"end":{"column":39,"line":126},"start":{"column":36,"line":126}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"116","location":{"end":{"column":38,"line":122},"start":{"column":20,"line":122}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"118","location":{"end":{"column":10,"line":135},"start":{"column":10,"line":128}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"119","location":{"end":{"column":10,"line":135},"start":{"column":10,"line":128}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"120","location":{"end":{"column":10,"line":135},"start":{"column":10,"line":128}},"mutatorName":"LogicalOperator","replacement":"this.state.isOpen || <div onClick={() => this.closeFloatCart()} className=\"float-cart__close-btn\">\r\n            X\r\n          </div>","status":"Survived"},{"id":"121","location":{"end":{"column":49,"line":130},"start":{"column":22,"line":130}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"122","location":{"end":{"column":10,"line":145},"start":{"column":10,"line":138}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"123","location":{"end":{"column":10,"line":145},"start":{"column":10,"line":138}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"125","location":{"end":{"column":28,"line":138},"start":{"column":10,"line":138}},"mutatorName":"BooleanLiteral","replacement":"this.state.isOpen","status":"Survived"},{"id":"124","location":{"end":{"column":10,"line":145},"start":{"column":10,"line":138}},"mutatorName":"LogicalOperator","replacement":"!this.state.isOpen || <span onClick={() => this.openFloatCart()} className=\"bag bag--float-cart-closed\">\r\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n          </span>","status":"Survived"},{"id":"126","location":{"end":{"column":48,"line":140},"start":{"column":22,"line":140}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"127","location":{"end":{"column":14,"line":162},"start":{"column":14,"line":157}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"128","location":{"end":{"column":14,"line":162},"start":{"column":14,"line":157}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"130","location":{"end":{"column":30,"line":157},"start":{"column":14,"line":157}},"mutatorName":"BooleanLiteral","replacement":"products.length","status":"Survived"},{"id":"129","location":{"end":{"column":14,"line":162},"start":{"column":14,"line":157}},"mutatorName":"LogicalOperator","replacement":"!products.length || <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>","status":"Survived"},{"id":"131","location":{"end":{"column":20,"line":172},"start":{"column":18,"line":169}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"132","location":{"end":{"column":18,"line":184},"start":{"column":18,"line":175}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"133","location":{"end":{"column":18,"line":184},"start":{"column":18,"line":175}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"134","location":{"end":{"column":18,"line":184},"start":{"column":18,"line":175}},"mutatorName":"LogicalOperator","replacement":"!!cartTotal.installments || <span>\r\n                    {`OR UP TO ${cartTotal.installments} x ${cartTotal.currencyFormat} ${formatPrice(cartTotal.totalPrice / cartTotal.installments, cartTotal.currencyId)}`}\r\n                  </span>","status":"Survived"},{"id":"135","location":{"end":{"column":42,"line":175},"start":{"column":18,"line":175}},"mutatorName":"BooleanLiteral","replacement":"!cartTotal.installments","status":"Survived"},{"id":"136","location":{"end":{"column":42,"line":175},"start":{"column":19,"line":175}},"mutatorName":"BooleanLiteral","replacement":"cartTotal.installments","status":"Survived"},{"id":"138","location":{"end":{"column":68,"line":180},"start":{"column":23,"line":180}},"mutatorName":"ArithmeticOperator","replacement":"cartTotal.totalPrice * cartTotal.installments","status":"Survived"},{"id":"137","location":{"end":{"column":24,"line":182},"start":{"column":22,"line":177}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"139","location":{"end":{"column":57,"line":187},"start":{"column":27,"line":187}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"140","location":{"end":{"column":3,"line":203},"start":{"column":25,"line":197}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"141","location":{"end":{"column":2,"line":203},"start":{"column":35,"line":197}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"142","location":{"end":{"column":65,"line":207},"start":{"column":3,"line":207}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\r\nimport { updateCart } from '../../services/total/actions';\r\nimport CartProduct from './CartProduct';\r\nimport { formatPrice } from '../../services/util';\r\n\r\nimport './style.scss';\r\n\r\nclass FloatCart extends Component {\r\n  static propTypes = {\r\n    loadCart: PropTypes.func.isRequired,\r\n    updateCart: PropTypes.func.isRequired,\r\n    cartProducts: PropTypes.array.isRequired,\r\n    newProduct: PropTypes.object,\r\n    removeProduct: PropTypes.func,\r\n    productToRemove: PropTypes.object,\r\n    changeProductQuantity: PropTypes.func,\r\n    productToChange: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.newProduct !== this.props.newProduct) {\r\n      this.addProduct(nextProps.newProduct);\r\n    }\r\n\r\n    if (nextProps.productToRemove !== this.props.productToRemove) {\r\n      this.removeProduct(nextProps.productToRemove);\r\n    }\r\n\r\n    if (nextProps.productToChange !== this.props.productToChange) {\r\n      this.changeProductQuantity(nextProps.productToChange);\r\n    }\r\n  }\r\n\r\n  openFloatCart = () => {\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  closeFloatCart = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  addProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n    let productAlreadyInCart = false;\r\n\r\n    cartProducts.forEach(cp => {\r\n      if (cp.id === product.id) {\r\n        cp.quantity += product.quantity;\r\n        productAlreadyInCart = true;\r\n      }\r\n    });\r\n\r\n    if (!productAlreadyInCart) {\r\n      cartProducts.push(product);\r\n    }\r\n\r\n    updateCart(cartProducts);\r\n    this.openFloatCart();\r\n  };\r\n\r\n  removeProduct = product => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const index = cartProducts.findIndex(p => p.id === product.id);\r\n    if (index >= 0) {\r\n      cartProducts.splice(index, 1);\r\n      updateCart(cartProducts);\r\n    }\r\n  };\r\n\r\n  proceedToCheckout = () => {\r\n    const {\r\n      totalPrice,\r\n      productQuantity,\r\n      currencyFormat,\r\n      currencyId\r\n    } = this.props.cartTotal;\r\n\r\n    if (!productQuantity) {\r\n      alert('Add some product in the cart!');\r\n    } else {\r\n      alert(\r\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\r\n          totalPrice,\r\n          currencyId\r\n        )}`\r\n      );\r\n    }\r\n  };\r\n\r\n  changeProductQuantity = changedProduct => {\r\n    const { cartProducts, updateCart } = this.props;\r\n\r\n    const product = cartProducts.find(p => p.id === changedProduct.id);\r\n    product.quantity = changedProduct.quantity;\r\n    if (product.quantity <= 0) {\r\n      this.removeProduct(product);\r\n    }\r\n    updateCart(cartProducts);\r\n  }\r\n\r\n  render() {\r\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\r\n\r\n    const products = cartProducts.map(p => {\r\n      return (\r\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\r\n      );\r\n    });\r\n\r\n    let classes = ['float-cart'];\r\n\r\n    if (!!this.state.isOpen) {\r\n      classes.push('float-cart--open');\r\n    }\r\n\r\n    return (\r\n      <div className={classes.join(' ')}>\r\n        {/* If cart open, show close (x) button */}\r\n        {this.state.isOpen && (\r\n          <div\r\n            onClick={() => this.closeFloatCart()}\r\n            className=\"float-cart__close-btn\"\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n\r\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\r\n        {!this.state.isOpen && (\r\n          <span\r\n            onClick={() => this.openFloatCart()}\r\n            className=\"bag bag--float-cart-closed\"\r\n          >\r\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n          </span>\r\n        )}\r\n\r\n        <div className=\"float-cart__content\">\r\n          <div className=\"float-cart__header\">\r\n            <span className=\"bag\">\r\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\r\n            </span>\r\n            <span className=\"header-title\">Cart</span>\r\n          </div>\r\n\r\n          <div className=\"float-cart__shelf-container\">\r\n            {products}\r\n            {!products.length && (\r\n              <p className=\"shelf-empty\">\r\n                Add some products in the cart <br />\r\n                :)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"float-cart__footer\">\r\n            <div className=\"sub\">SUBTOTAL</div>\r\n            <div className=\"sub-price\">\r\n              <p className=\"sub-price__val\">\r\n                {`${cartTotal.currencyFormat} ${formatPrice(\r\n                  cartTotal.totalPrice,\r\n                  cartTotal.currencyId\r\n                )}`}\r\n              </p>\r\n              <small className=\"sub-price__installment\">\r\n                {!!cartTotal.installments && (\r\n                  <span>\r\n                    {`OR UP TO ${cartTotal.installments} x ${\r\n                      cartTotal.currencyFormat\r\n                    } ${formatPrice(\r\n                      cartTotal.totalPrice / cartTotal.installments,\r\n                      cartTotal.currencyId\r\n                    )}`}\r\n                  </span>\r\n                )}\r\n              </small>\r\n            </div>\r\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\r\n              Checkout\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartProducts: state.cart.products,\r\n  newProduct: state.cart.productToAdd,\r\n  productToRemove: state.cart.productToRemove,\r\n  productToChange: state.cart.productToChange,\r\n  cartTotal: state.total.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\r\n)(FloatCart);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Shelf\\Filter\\index.js":{"language":"javascript","mutants":[{"id":"148","location":{"end":{"column":64,"line":11},"start":{"column":24,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"149","location":{"end":{"column":29,"line":11},"start":{"column":25,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"150","location":{"end":{"column":34,"line":11},"start":{"column":31,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"151","location":{"end":{"column":39,"line":11},"start":{"column":36,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"152","location":{"end":{"column":45,"line":11},"start":{"column":41,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"153","location":{"end":{"column":50,"line":11},"start":{"column":47,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"154","location":{"end":{"column":56,"line":11},"start":{"column":52,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"155","location":{"end":{"column":63,"line":11},"start":{"column":58,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"157","location":{"end":{"column":4,"line":21},"start":{"column":23,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"156","location":{"end":{"column":4,"line":17},"start":{"column":22,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"158","location":{"end":{"column":4,"line":31},"start":{"column":29,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"159","location":{"end":{"column":43,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"160","location":{"end":{"column":43,"line":24},"start":{"column":9,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"161","location":{"end":{"column":6,"line":26},"start":{"column":45,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"162","location":{"end":{"column":6,"line":28},"start":{"column":12,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"164","location":{"end":{"column":67,"line":42},"start":{"column":22,"line":42}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"163","location":{"end":{"column":4,"line":40},"start":{"column":20,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"165","location":{"end":{"column":4,"line":52},"start":{"column":12,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"166","location":{"end":{"column":20,"line":57},"start":{"column":3,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateFilters } from '../../../services/filters/actions';\r\nimport Checkbox from '../../Checkbox';\r\nimport GithubStarButton from '../../github/StarButton';\r\n\r\nimport './style.scss';\r\n\r\nconst availableSizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    updateFilters: PropTypes.func.isRequired,\r\n    filters: PropTypes.array\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.selectedCheckboxes = new Set();\r\n  }\r\n\r\n  toggleCheckbox = label => {\r\n    if (this.selectedCheckboxes.has(label)) {\r\n      this.selectedCheckboxes.delete(label);\r\n    } else {\r\n      this.selectedCheckboxes.add(label);\r\n    }\r\n\r\n    this.props.updateFilters(Array.from(this.selectedCheckboxes));\r\n  };\r\n\r\n  createCheckbox = label => (\r\n    <Checkbox\r\n      classes=\"filters-available-size\"\r\n      label={label}\r\n      handleCheckboxChange={this.toggleCheckbox}\r\n      key={label}\r\n    />\r\n  );\r\n\r\n  createCheckboxes = () => availableSizes.map(this.createCheckbox);\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"filters\">\r\n        <h4 className=\"title\">Sizes:</h4>\r\n        {this.createCheckboxes()}\r\n        <GithubStarButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { updateFilters }\r\n)(Filter);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Selectbox\\index.js":{"language":"javascript","mutants":[{"id":"143","location":{"end":{"column":2,"line":17},"start":{"column":61,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"144","location":{"end":{"column":7,"line":10},"start":{"column":25,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"146","location":{"end":{"column":58,"line":13},"start":{"column":23,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"145","location":{"end":{"column":6,"line":10},"start":{"column":17,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"147","location":{"end":{"column":2,"line":23},"start":{"column":23,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Selectbox = ({ options, classes, handleOnChange }) => {\r\n  const createOptions = options =>\r\n    options.map(o => (\r\n      <option value={o.value} key={o.value}>\r\n        {o.label}\r\n      </option>\r\n    ));\r\n\r\n  return (\r\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\r\n      {createOptions(options)}\r\n    </select>\r\n  );\r\n};\r\n\r\nSelectbox.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  classes: PropTypes.string,\r\n  handleOnChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Selectbox;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Shelf\\ProductList\\Product\\index.js":{"language":"javascript","mutants":[{"id":"167","location":{"end":{"column":2,"line":56},"start":{"column":46,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"168","location":{"end":{"column":29,"line":16},"start":{"column":7,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"169","location":{"end":{"column":29,"line":16},"start":{"column":7,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"172","location":{"end":{"column":4,"line":28},"start":{"column":31,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"170","location":{"end":{"column":29,"line":16},"start":{"column":7,"line":16}},"mutatorName":"BooleanLiteral","replacement":"!product.installments","status":"Survived"},{"id":"171","location":{"end":{"column":29,"line":16},"start":{"column":8,"line":16}},"mutatorName":"BooleanLiteral","replacement":"product.installments","status":"Survived"},{"id":"173","location":{"end":{"column":66,"line":17},"start":{"column":30,"line":17}},"mutatorName":"ArithmeticOperator","replacement":"product.price * product.installments","status":"Survived"},{"id":"174","location":{"end":{"column":41,"line":33},"start":{"column":16,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"175","location":{"end":{"column":8,"line":38},"start":{"column":8,"line":36}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"176","location":{"end":{"column":8,"line":38},"start":{"column":8,"line":36}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"178","location":{"end":{"column":72,"line":41},"start":{"column":22,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"177","location":{"end":{"column":8,"line":38},"start":{"column":8,"line":36}},"mutatorName":"LogicalOperator","replacement":"product.isFreeShipping || <div className=\"shelf-stopper\">Free shipping</div>","status":"Survived"},{"id":"180","location":{"end":{"column":65,"line":49},"start":{"column":40,"line":49}},"mutatorName":"ArithmeticOperator","replacement":"formattedPrice.length + 3","status":"Survived"},{"id":"179","location":{"end":{"column":65,"line":48},"start":{"column":40,"line":48}},"mutatorName":"ArithmeticOperator","replacement":"formattedPrice.length + 3","status":"Survived"},{"id":"182","location":{"end":{"column":17,"line":65},"start":{"column":3,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"181","location":{"end":{"column":2,"line":61},"start":{"column":21,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Thumb from '../../../Thumb';\r\nimport { formatPrice } from '../../../../services/util';\r\nimport { addProduct } from '../../../../services/cart/actions';\r\n\r\nconst Product = ({ product, addProduct }) => {\r\n  product.quantity = 1;\r\n\r\n  let formattedPrice = formatPrice(product.price, product.currencyId);\r\n\r\n  let productInstallment;\r\n\r\n  if (!!product.installments) {\r\n    const installmentPrice = product.price / product.installments;\r\n\r\n    productInstallment = (\r\n      <div className=\"installment\">\r\n        <span>or {product.installments} x</span>\r\n        <b>\r\n          {product.currencyFormat}\r\n          {formatPrice(installmentPrice, product.currencyId)}\r\n        </b>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"shelf-item\"\r\n      onClick={() => addProduct(product)}\r\n      data-sku={product.sku}\r\n    >\r\n      {product.isFreeShipping && (\r\n        <div className=\"shelf-stopper\">Free shipping</div>\r\n      )}\r\n      <Thumb\r\n        classes=\"shelf-item__thumb\"\r\n        src={require(`../../../../static/products/${product.sku}_1.jpg`)}\r\n        alt={product.title}\r\n      />\r\n      <p className=\"shelf-item__title\">{product.title}</p>\r\n      <div className=\"shelf-item__price\">\r\n        <div className=\"val\">\r\n          <small>{product.currencyFormat}</small>\r\n          <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\r\n          <span>{formattedPrice.substr(formattedPrice.length - 3, 3)}</span>\r\n        </div>\r\n        {productInstallment}\r\n      </div>\r\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.object.isRequired,\r\n  addProduct: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addProduct }\r\n)(Product);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Shelf\\ProductList\\index.js":{"language":"javascript","mutants":[{"id":"183","location":{"end":{"column":2,"line":9},"start":{"column":39,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"184","location":{"end":{"column":4,"line":8},"start":{"column":28,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"}],"source":"import React from 'react';\r\n\r\nimport Product from './Product';\r\n\r\nconst ProductList = ({ products }) => {\r\n  return products.map(p => {\r\n    return <Product product={p} key={p.id} />;\r\n  });\r\n};\r\n\r\nexport default ProductList;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Shelf\\ShelfHeader\\index.js":{"language":"javascript","mutants":[{"id":"185","location":{"end":{"column":2,"line":15},"start":{"column":30,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"186","location":{"end":{"column":2,"line":19},"start":{"column":25,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Sort from '../Sort';\r\n\r\nconst ShelfHeader = props => {\r\n  return (\r\n    <div className=\"shelf-container-header\">\r\n      <small className=\"products-found\">\r\n        <span>{props.productsLength} Product(s) found.</span>\r\n      </small>\r\n      <Sort />\r\n    </div>\r\n  );\r\n};\r\n\r\nShelfHeader.propTypes = {\r\n  productsLength: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ShelfHeader;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Shelf\\Sort\\index.js":{"language":"javascript","mutants":[{"id":"188","location":{"end":{"column":33,"line":9},"start":{"column":3,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"187","location":{"end":{"column":2,"line":12},"start":{"column":16,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"189","location":{"end":{"column":14,"line":9},"start":{"column":12,"line":9}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"190","location":{"end":{"column":31,"line":9},"start":{"column":23,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"191","location":{"end":{"column":55,"line":10},"start":{"column":3,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"192","location":{"end":{"column":25,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"193","location":{"end":{"column":53,"line":10},"start":{"column":34,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"194","location":{"end":{"column":56,"line":11},"start":{"column":3,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"195","location":{"end":{"column":26,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"198","location":{"end":{"column":75,"line":17},"start":{"column":49,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"196","location":{"end":{"column":54,"line":11},"start":{"column":35,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"197","location":{"end":{"column":2,"line":19},"start":{"column":14,"line":14}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"199","location":{"end":{"column":2,"line":24},"start":{"column":18,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"200","location":{"end":{"column":3,"line":28},"start":{"column":25,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"201","location":{"end":{"column":2,"line":28},"start":{"column":35,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"202","location":{"end":{"column":17,"line":32},"start":{"column":3,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updateSort } from '../../../services/sort/actions';\r\nimport Selectbox from '../../Selectbox';\r\n\r\nconst sortBy = [\r\n  { value: '', label: 'Select' },\r\n  { value: 'lowestprice', label: 'Lowest to highest' },\r\n  { value: 'highestprice', label: 'Highest to lowest' }\r\n];\r\n\r\nconst Sort = ({ updateSort, sort }) => (\r\n  <div className=\"sort\">\r\n    Order by\r\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\r\n  </div>\r\n);\r\n\r\nSort.propTypes = {\r\n  updateSort: PropTypes.func.isRequired,\r\n  sort: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  sort: state.sort.type\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateSort }\r\n)(Sort);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Shelf\\index.js":{"language":"javascript","mutants":[{"id":"203","location":{"end":{"column":4,"line":19},"start":{"column":22,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"204","location":{"end":{"column":4,"line":23},"start":{"column":11,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"205","location":{"end":{"column":21,"line":22},"start":{"column":16,"line":22}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"206","location":{"end":{"column":4,"line":27},"start":{"column":23,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"207","location":{"end":{"column":4,"line":39},"start":{"column":40,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"208","location":{"end":{"column":46,"line":32},"start":{"column":9,"line":32}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"211","location":{"end":{"column":6,"line":34},"start":{"column":48,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"209","location":{"end":{"column":46,"line":32},"start":{"column":9,"line":32}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"210","location":{"end":{"column":46,"line":32},"start":{"column":9,"line":32}},"mutatorName":"EqualityOperator","replacement":"nextFilters.length === filters.length","status":"Survived"},{"id":"213","location":{"end":{"column":37,"line":36},"start":{"column":9,"line":36}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"212","location":{"end":{"column":37,"line":36},"start":{"column":9,"line":36}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"214","location":{"end":{"column":37,"line":36},"start":{"column":9,"line":36}},"mutatorName":"EqualityOperator","replacement":"nextSort === this.props.sort","status":"Survived"},{"id":"215","location":{"end":{"column":6,"line":38},"start":{"column":39,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"216","location":{"end":{"column":4,"line":49},"start":{"column":8,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"217","location":{"end":{"column":38,"line":45},"start":{"column":19,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"219","location":{"end":{"column":6,"line":48},"start":{"column":51,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"220","location":{"end":{"column":41,"line":47},"start":{"column":21,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"221","location":{"end":{"column":39,"line":47},"start":{"column":34,"line":47}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"218","location":{"end":{"column":36,"line":45},"start":{"column":32,"line":45}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"222","location":{"end":{"column":4,"line":64},"start":{"column":12,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"223","location":{"end":{"column":34,"line":57},"start":{"column":10,"line":57}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"224","location":{"end":{"column":34,"line":57},"start":{"column":10,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"225","location":{"end":{"column":34,"line":57},"start":{"column":10,"line":57}},"mutatorName":"LogicalOperator","replacement":"isLoading || <Spinner />","status":"Survived"},{"id":"226","location":{"end":{"column":3,"line":71},"start":{"column":25,"line":67}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"228","location":{"end":{"column":20,"line":75},"start":{"column":3,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"227","location":{"end":{"column":2,"line":71},"start":{"column":35,"line":67}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchProducts } from '../../services/shelf/actions';\r\n\r\nimport Spinner from '../Spinner';\r\nimport ShelfHeader from './ShelfHeader';\r\nimport ProductList from './ProductList';\r\n\r\nimport './style.scss';\r\n\r\nclass Shelf extends Component {\r\n  static propTypes = {\r\n    fetchProducts: PropTypes.func.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n    filters: PropTypes.array,\r\n    sort: PropTypes.string\r\n  };\r\n\r\n  state = {\r\n    isLoading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleFetchProducts();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { filters: nextFilters, sort: nextSort } = nextProps;\r\n    const { filters } = this.props;\r\n    if (nextFilters.length !== filters.length) {\r\n      this.handleFetchProducts(nextFilters, undefined);\r\n    }\r\n\r\n    if (nextSort !== this.props.sort) {\r\n      this.handleFetchProducts(undefined, nextSort);\r\n    }\r\n  }\r\n\r\n  handleFetchProducts = (\r\n    filters = this.props.filters,\r\n    sort = this.props.sort\r\n  ) => {\r\n    this.setState({ isLoading: true });\r\n    this.props.fetchProducts(filters, sort, () => {\r\n      this.setState({ isLoading: false });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isLoading && <Spinner />}\r\n        <div className=\"shelf-container\">\r\n          <ShelfHeader productsLength={products.length} />\r\n          <ProductList products={products} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.shelf.products,\r\n  filters: state.filters.items,\r\n  sort: state.sort.type\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchProducts }\r\n)(Shelf);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Thumb\\__tests__\\Thumb.tests.js":{"language":"javascript","mutants":[{"id":"230","location":{"end":{"column":37,"line":3},"start":{"column":13,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"232","location":{"end":{"column":2,"line":8},"start":{"column":36,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"231","location":{"end":{"column":28,"line":5},"start":{"column":4,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import Thumb from '../';\r\n\r\nconst src = 'https://bit.ly/2QIKw60';\r\n\r\nit('mount without crashing', () => {\r\n  const wrapped = mount(<Thumb src={src} />);\r\n  wrapped.unmount();\r\n});\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Spinner\\index.js":{"language":"javascript","mutants":[{"id":"229","location":{"end":{"column":2,"line":12},"start":{"column":16,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nexport default () => (\r\n  <div className=\"spinner lds-ring\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\github\\Corner.js":{"language":"javascript","mutants":[{"id":"235","location":{"end":{"column":2,"line":40},"start":{"column":16,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"236","location":{"end":{"column":8,"line":23},"start":{"column":14,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"237","location":{"end":{"column":24,"line":16},"start":{"column":15,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"238","location":{"end":{"column":22,"line":17},"start":{"column":16,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"239","location":{"end":{"column":29,"line":18},"start":{"column":19,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"240","location":{"end":{"column":17,"line":19},"start":{"column":14,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"241","location":{"end":{"column":20,"line":20},"start":{"column":17,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"243","location":{"end":{"column":34,"line":22},"start":{"column":20,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"242","location":{"end":{"column":18,"line":21},"start":{"column":15,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"244","location":{"end":{"column":50,"line":30},"start":{"column":16,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"245","location":{"end":{"column":48,"line":30},"start":{"column":35,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default () => (\r\n  <a\r\n    href=\"https://github.com/jeffersonRibeiro/react-shopping-cart\"\r\n    className=\"github-corner\"\r\n    aria-label=\"View source on Github\"\r\n  >\r\n    <svg\r\n      width=\"80\"\r\n      height=\"80\"\r\n      viewBox=\"0 0 250 250\"\r\n      style={{\r\n        fill: '#151513',\r\n        color: '#fff',\r\n        position: 'absolute',\r\n        top: '0',\r\n        border: '0',\r\n        left: '0',\r\n        transform: 'scale(-1, 1)'\r\n      }}\r\n      aria-hidden=\"true\"\r\n    >\r\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\r\n      <path\r\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\r\n        fill=\"currentColor\"\r\n        style={{ transformOrigin: '130px 106px' }}\r\n        className=\"octo-arm\"\r\n      />\r\n      <path\r\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\r\n        fill=\"currentColor\"\r\n        className=\"octo-body\"\r\n      />\r\n    </svg>\r\n  </a>\r\n);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\Thumb\\index.js":{"language":"javascript","mutants":[{"id":"233","location":{"end":{"column":2,"line":8},"start":{"column":15,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"234","location":{"end":{"column":2,"line":15},"start":{"column":19,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Thumb = props => (\r\n  <div className={props.classes}>\r\n    <img src={props.src} alt={props.alt} title={props.title} />\r\n  </div>\r\n);\r\n\r\nThumb.propTypes = {\r\n  alt: PropTypes.string,\r\n  title: PropTypes.string,\r\n  classes: PropTypes.string,\r\n  src: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Thumb;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\index.js":{"language":"javascript","mutants":[{"id":"247","location":{"end":{"column":33,"line":14},"start":{"column":27,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import 'babel-polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport Root from './Root';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <App />\r\n  </Root>,\r\n  document.getElementById('root')\r\n);\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\components\\github\\StarButton.js":{"language":"javascript","mutants":[{"id":"246","location":{"end":{"column":2,"line":17},"start":{"column":20,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import React from 'react';\r\n\r\nconst StarButton = () => (\r\n  <div className=\"star-button-container\">\r\n    <small>Leave a star on Github if this repository was useful :)</small>\r\n    <a\r\n      className=\"github-button\"\r\n      href=\"https://github.com/jeffersonRibeiro/react-shopping-cart\"\r\n      data-icon=\"octicon-star\"\r\n      data-size=\"large\"\r\n      data-show-count=\"true\"\r\n      aria-label=\"Star jeffersonRibeiro/react-shopping-cart on GitHub\"\r\n    >\r\n      Star\r\n    </a>\r\n  </div>\r\n);\r\n\r\nexport default StarButton;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\cart\\actionTypes.js":{"language":"javascript","mutants":[{"id":"248","location":{"end":{"column":37,"line":1},"start":{"column":26,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"249","location":{"end":{"column":41,"line":2},"start":{"column":28,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"250","location":{"end":{"column":47,"line":3},"start":{"column":31,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"251","location":{"end":{"column":65,"line":4},"start":{"column":40,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"252","location":{"end":{"column":41,"line":5},"start":{"column":28,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const LOAD_CART = 'LOAD_CART';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\r\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\cart\\actions.js":{"language":"javascript","mutants":[{"id":"253","location":{"end":{"column":3,"line":6},"start":{"column":25,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"254","location":{"end":{"column":2,"line":6},"start":{"column":38,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"255","location":{"end":{"column":3,"line":11},"start":{"column":27,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"256","location":{"end":{"column":2,"line":11},"start":{"column":39,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"257","location":{"end":{"column":3,"line":16},"start":{"column":30,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"258","location":{"end":{"column":2,"line":16},"start":{"column":42,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"259","location":{"end":{"column":3,"line":21},"start":{"column":38,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"260","location":{"end":{"column":2,"line":21},"start":{"column":50,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\r\n\r\nexport const loadCart = products => ({\r\n  type: LOAD_CART,\r\n  payload: products\r\n});\r\n\r\nexport const addProduct = product => ({\r\n  type: ADD_PRODUCT,\r\n  payload: product\r\n});\r\n\r\nexport const removeProduct = product => ({\r\n  type: REMOVE_PRODUCT,\r\n  payload: product\r\n});\r\n\r\nexport const changeProductQuantity = product => ({\r\n  type: CHANGE_PRODUCT_QUANTITY,\r\n  payload: product\r\n});"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\cart\\reducer.js":{"language":"javascript","mutants":[{"id":"262","location":{"end":{"column":15,"line":4},"start":{"column":13,"line":4}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"261","location":{"end":{"column":2,"line":5},"start":{"column":22,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"263","location":{"end":{"column":2,"line":32},"start":{"column":55,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"264","location":{"end":{"column":9,"line":13},"start":{"column":5,"line":9}},"mutatorName":"ConditionalExpression","replacement":"case LOAD_CART:","status":"Survived"},{"id":"265","location":{"end":{"column":8,"line":13},"start":{"column":14,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"266","location":{"end":{"column":9,"line":18},"start":{"column":5,"line":14}},"mutatorName":"ConditionalExpression","replacement":"case ADD_PRODUCT:","status":"Killed"},{"id":"267","location":{"end":{"column":8,"line":18},"start":{"column":14,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"268","location":{"end":{"column":9,"line":23},"start":{"column":5,"line":19}},"mutatorName":"ConditionalExpression","replacement":"case REMOVE_PRODUCT:","status":"Survived"},{"id":"269","location":{"end":{"column":8,"line":23},"start":{"column":14,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"270","location":{"end":{"column":9,"line":28},"start":{"column":5,"line":24}},"mutatorName":"ConditionalExpression","replacement":"case CHANGE_PRODUCT_QUANTITY:","status":"Survived"},{"id":"271","location":{"end":{"column":8,"line":28},"start":{"column":14,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"272","location":{"end":{"column":20,"line":30},"start":{"column":5,"line":29}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Killed"}],"source":"import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\r\n\r\nconst initialState = {\r\n  products: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_CART:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    case ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productToAdd: Object.assign({}, action.payload)\r\n      };\r\n    case REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productToRemove: Object.assign({}, action.payload)\r\n      };\r\n    case CHANGE_PRODUCT_QUANTITY:\r\n      return {\r\n        ...state,\r\n        productToChange: Object.assign({}, action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\filters\\actions.js":{"language":"javascript","mutants":[{"id":"274","location":{"end":{"column":3,"line":6},"start":{"column":30,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"275","location":{"end":{"column":2,"line":6},"start":{"column":42,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"import { UPDATE_FILTER } from './actionTypes';\r\n\r\nexport const updateFilters = filters => ({\r\n  type: UPDATE_FILTER,\r\n  payload: filters\r\n});\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\filters\\actionTypes.js":{"language":"javascript","mutants":[{"id":"273","location":{"end":{"column":45,"line":1},"start":{"column":30,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const UPDATE_FILTER = 'UPDATE_FILTER';\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\filters\\reducer.js":{"language":"javascript","mutants":[{"id":"276","location":{"end":{"column":2,"line":5},"start":{"column":22,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"278","location":{"end":{"column":2,"line":17},"start":{"column":55,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"277","location":{"end":{"column":12,"line":4},"start":{"column":10,"line":4}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"279","location":{"end":{"column":9,"line":13},"start":{"column":5,"line":9}},"mutatorName":"ConditionalExpression","replacement":"case UPDATE_FILTER:","status":"Survived"},{"id":"280","location":{"end":{"column":8,"line":13},"start":{"column":14,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"281","location":{"end":{"column":20,"line":15},"start":{"column":5,"line":14}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Killed"}],"source":"import { UPDATE_FILTER } from './actionTypes';\r\n\r\nconst initialState = {\r\n  items: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_FILTER:\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\reducers.js":{"language":"javascript","mutants":[{"id":"282","location":{"end":{"column":2,"line":14},"start":{"column":32,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"import { combineReducers } from 'redux';\r\nimport shelfReducer from './shelf/reducer';\r\nimport cartReducer from './cart/reducer';\r\nimport totalReducer from './total/reducer';\r\nimport filtersReducer from './filters/reducer';\r\nimport sortReducer from './sort/reducer';\r\n\r\nexport default combineReducers({\r\n  shelf: shelfReducer,\r\n  cart: cartReducer,\r\n  total: totalReducer,\r\n  filters: filtersReducer,\r\n  sort: sortReducer\r\n});\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\shelf\\actions.js":{"language":"javascript","mutants":[{"id":"284","location":{"end":{"column":2,"line":17},"start":{"column":17,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"285","location":{"end":{"column":4,"line":11},"start":{"column":26,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"286","location":{"end":{"column":26,"line":8},"start":{"column":9,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"287","location":{"end":{"column":26,"line":8},"start":{"column":9,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"288","location":{"end":{"column":26,"line":8},"start":{"column":9,"line":8}},"mutatorName":"EqualityOperator","replacement":"a.price <= b.price","status":"Survived"},{"id":"289","location":{"end":{"column":26,"line":8},"start":{"column":9,"line":8}},"mutatorName":"EqualityOperator","replacement":"a.price >= b.price","status":"Survived"},{"id":"290","location":{"end":{"column":37,"line":8},"start":{"column":35,"line":8}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"291","location":{"end":{"column":26,"line":9},"start":{"column":9,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"292","location":{"end":{"column":26,"line":9},"start":{"column":9,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"293","location":{"end":{"column":26,"line":9},"start":{"column":9,"line":9}},"mutatorName":"EqualityOperator","replacement":"a.price >= b.price","status":"Survived"},{"id":"294","location":{"end":{"column":26,"line":9},"start":{"column":9,"line":9}},"mutatorName":"EqualityOperator","replacement":"a.price <= b.price","status":"Survived"},{"id":"295","location":{"end":{"column":4,"line":16},"start":{"column":27,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"296","location":{"end":{"column":26,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"297","location":{"end":{"column":26,"line":13},"start":{"column":9,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"298","location":{"end":{"column":26,"line":13},"start":{"column":9,"line":13}},"mutatorName":"EqualityOperator","replacement":"a.price >= b.price","status":"Survived"},{"id":"299","location":{"end":{"column":26,"line":13},"start":{"column":9,"line":13}},"mutatorName":"EqualityOperator","replacement":"a.price <= b.price","status":"Survived"},{"id":"300","location":{"end":{"column":37,"line":13},"start":{"column":35,"line":13}},"mutatorName":"UnaryOperator","replacement":"+1","status":"Survived"},{"id":"301","location":{"end":{"column":26,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"302","location":{"end":{"column":26,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"303","location":{"end":{"column":26,"line":14},"start":{"column":9,"line":14}},"mutatorName":"EqualityOperator","replacement":"a.price <= b.price","status":"Survived"},{"id":"304","location":{"end":{"column":26,"line":14},"start":{"column":9,"line":14}},"mutatorName":"EqualityOperator","replacement":"a.price >= b.price","status":"Survived"},{"id":"305","location":{"end":{"column":2,"line":47},"start":{"column":30,"line":19}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"306","location":{"end":{"column":2,"line":47},"start":{"column":73,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"307","location":{"end":{"column":6,"line":43},"start":{"column":18,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"308","location":{"end":{"column":42,"line":25},"start":{"column":11,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"310","location":{"end":{"column":42,"line":25},"start":{"column":11,"line":25}},"mutatorName":"LogicalOperator","replacement":"!!filters || filters.length > 0","status":"Killed"},{"id":"309","location":{"end":{"column":42,"line":25},"start":{"column":11,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"311","location":{"end":{"column":20,"line":25},"start":{"column":11,"line":25}},"mutatorName":"BooleanLiteral","replacement":"!filters","status":"Survived"},{"id":"312","location":{"end":{"column":20,"line":25},"start":{"column":12,"line":25}},"mutatorName":"BooleanLiteral","replacement":"filters","status":"Survived"},{"id":"313","location":{"end":{"column":42,"line":25},"start":{"column":24,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"314","location":{"end":{"column":42,"line":25},"start":{"column":24,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"315","location":{"end":{"column":42,"line":25},"start":{"column":24,"line":25}},"mutatorName":"EqualityOperator","replacement":"filters.length >= 0","status":"Killed"},{"id":"316","location":{"end":{"column":42,"line":25},"start":{"column":24,"line":25}},"mutatorName":"EqualityOperator","replacement":"filters.length <= 0","status":"Killed"},{"id":"317","location":{"end":{"column":8,"line":29},"start":{"column":44,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"318","location":{"end":{"column":71,"line":27},"start":{"column":36,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"319","location":{"end":{"column":70,"line":27},"start":{"column":24,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"321","location":{"end":{"column":69,"line":27},"start":{"column":59,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"320","location":{"end":{"column":69,"line":27},"start":{"column":51,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"322","location":{"end":{"column":69,"line":27},"start":{"column":59,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"323","location":{"end":{"column":69,"line":27},"start":{"column":59,"line":27}},"mutatorName":"EqualityOperator","replacement":"size !== f","status":"Survived"},{"id":"324","location":{"end":{"column":19,"line":31},"start":{"column":11,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"325","location":{"end":{"column":19,"line":31},"start":{"column":11,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"326","location":{"end":{"column":19,"line":31},"start":{"column":11,"line":31}},"mutatorName":"BooleanLiteral","replacement":"!sortBy","status":"Survived"},{"id":"327","location":{"end":{"column":19,"line":31},"start":{"column":12,"line":31}},"mutatorName":"BooleanLiteral","replacement":"sortBy","status":"Survived"},{"id":"329","location":{"end":{"column":21,"line":35},"start":{"column":11,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"328","location":{"end":{"column":8,"line":33},"start":{"column":21,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"330","location":{"end":{"column":21,"line":35},"start":{"column":11,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"331","location":{"end":{"column":21,"line":35},"start":{"column":11,"line":35}},"mutatorName":"BooleanLiteral","replacement":"!callback","status":"Survived"},{"id":"332","location":{"end":{"column":21,"line":35},"start":{"column":12,"line":35}},"mutatorName":"BooleanLiteral","replacement":"callback","status":"Survived"},{"id":"333","location":{"end":{"column":8,"line":37},"start":{"column":23,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"334","location":{"end":{"column":8,"line":42},"start":{"column":23,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"335","location":{"end":{"column":6,"line":46},"start":{"column":19,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"336","location":{"end":{"column":63,"line":45},"start":{"column":19,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { FETCH_PRODUCTS } from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nimport { productsAPI } from '../util';\r\n\r\nconst compare = {\r\n  lowestprice: (a, b) => {\r\n    if (a.price < b.price) return -1;\r\n    if (a.price > b.price) return 1;\r\n    return 0;\r\n  },\r\n  highestprice: (a, b) => {\r\n    if (a.price > b.price) return -1;\r\n    if (a.price < b.price) return 1;\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\r\n  return axios\r\n    .get(productsAPI)\r\n    .then(res => {\r\n      let { products } = res.data;\r\n\r\n      if (!!filters && filters.length > 0) {\r\n        products = products.filter(p =>\r\n          filters.find(f => p.availableSizes.find(size => size === f))\r\n        );\r\n      }\r\n\r\n      if (!!sortBy) {\r\n        products = products.sort(compare[sortBy]);\r\n      }\r\n\r\n      if (!!callback) {\r\n        callback();\r\n      }\r\n\r\n      return dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: products\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log('Could not fetch products. Try again later.');\r\n    });\r\n};\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\shelf\\actionTypes.js":{"language":"javascript","mutants":[{"id":"283","location":{"end":{"column":47,"line":1},"start":{"column":31,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\shelf\\reducer.js":{"language":"javascript","mutants":[{"id":"337","location":{"end":{"column":2,"line":5},"start":{"column":22,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"338","location":{"end":{"column":15,"line":4},"start":{"column":13,"line":4}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Killed"},{"id":"339","location":{"end":{"column":2,"line":17},"start":{"column":55,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"340","location":{"end":{"column":9,"line":13},"start":{"column":5,"line":9}},"mutatorName":"ConditionalExpression","replacement":"case FETCH_PRODUCTS:","status":"Killed"},{"id":"341","location":{"end":{"column":8,"line":13},"start":{"column":14,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"342","location":{"end":{"column":20,"line":15},"start":{"column":5,"line":14}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Killed"}],"source":"import { FETCH_PRODUCTS } from './actionTypes';\r\n\r\nconst initialState = {\r\n  products: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\sort\\actionTypes.js":{"language":"javascript","mutants":[{"id":"343","location":{"end":{"column":41,"line":1},"start":{"column":28,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const UPDATE_SORT = 'UPDATE_SORT';\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\sort\\actions.js":{"language":"javascript","mutants":[{"id":"344","location":{"end":{"column":3,"line":6},"start":{"column":27,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"345","location":{"end":{"column":2,"line":6},"start":{"column":36,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"import { UPDATE_SORT } from './actionTypes';\r\n\r\nexport const updateSort = sort => ({\r\n  type: UPDATE_SORT,\r\n  payload: sort\r\n});\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\sort\\reducer.js":{"language":"javascript","mutants":[{"id":"346","location":{"end":{"column":2,"line":5},"start":{"column":22,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"347","location":{"end":{"column":11,"line":4},"start":{"column":9,"line":4}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"348","location":{"end":{"column":2,"line":17},"start":{"column":55,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"350","location":{"end":{"column":8,"line":13},"start":{"column":14,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"349","location":{"end":{"column":9,"line":13},"start":{"column":5,"line":9}},"mutatorName":"ConditionalExpression","replacement":"case UPDATE_SORT:","status":"Survived"},{"id":"351","location":{"end":{"column":20,"line":15},"start":{"column":5,"line":14}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Killed"}],"source":"import { UPDATE_SORT } from './actionTypes';\r\n\r\nconst initialState = {\r\n  type: ''\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_SORT:\r\n      return {\r\n        ...state,\r\n        type: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\store.js":{"language":"javascript","mutants":[{"id":"352","location":{"end":{"column":2,"line":31},"start":{"column":32,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"353","location":{"end":{"column":69,"line":7},"start":{"column":5,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"354","location":{"end":{"column":69,"line":7},"start":{"column":5,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"355","location":{"end":{"column":69,"line":7},"start":{"column":5,"line":7}},"mutatorName":"LogicalOperator","replacement":"JSON.parse(window.localStorage.getItem('state')) && initialState","status":"Killed"},{"id":"356","location":{"end":{"column":51,"line":7},"start":{"column":44,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"357","location":{"end":{"column":29,"line":8},"start":{"column":22,"line":8}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Killed"},{"id":"358","location":{"end":{"column":4,"line":28},"start":{"column":25,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"359","location":{"end":{"column":6,"line":25},"start":{"column":21,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"360","location":{"end":{"column":40,"line":27},"start":{"column":33,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nexport default initialState => {\r\n  initialState =\r\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\r\n  const middleware = [thunk];\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware)\r\n      /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__() */\r\n    )\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    const state = store.getState();\r\n    const persist = {\r\n      cart: state.cart,\r\n      total: state.total\r\n    };\r\n\r\n    window.localStorage.setItem('state', JSON.stringify(persist));\r\n  });\r\n\r\n  return store;\r\n};\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\total\\actions.js":{"language":"javascript","mutants":[{"id":"362","location":{"end":{"column":2,"line":31},"start":{"column":27,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"363","location":{"end":{"column":2,"line":31},"start":{"column":55,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"364","location":{"end":{"column":4,"line":7},"start":{"column":57,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"365","location":{"end":{"column":4,"line":12},"start":{"column":52,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"366","location":{"end":{"column":32,"line":10},"start":{"column":12,"line":10}},"mutatorName":"ArithmeticOperator","replacement":"p.price / p.quantity","status":"Survived"},{"id":"367","location":{"end":{"column":4,"line":17},"start":{"column":58,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"368","location":{"end":{"column":39,"line":15},"start":{"column":15,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"369","location":{"end":{"column":39,"line":15},"start":{"column":15,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"370","location":{"end":{"column":39,"line":15},"start":{"column":15,"line":15}},"mutatorName":"EqualityOperator","replacement":"p.installments >= greater","status":"Survived"},{"id":"371","location":{"end":{"column":39,"line":15},"start":{"column":15,"line":15}},"mutatorName":"EqualityOperator","replacement":"p.installments <= greater","status":"Survived"},{"id":"372","location":{"end":{"column":4,"line":25},"start":{"column":19,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"373","location":{"end":{"column":22,"line":23},"start":{"column":17,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"374","location":{"end":{"column":24,"line":24},"start":{"column":21,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"375","location":{"end":{"column":4,"line":30},"start":{"column":12,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"import { UPDATE_CART } from './actionTypes';\r\n\r\nexport const updateCart = cartProducts => dispatch => {\r\n  let productQuantity = cartProducts.reduce((sum, p) => {\r\n    sum += p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let totalPrice = cartProducts.reduce((sum, p) => {\r\n    sum += p.price * p.quantity;\r\n    return sum;\r\n  }, 0);\r\n\r\n  let installments = cartProducts.reduce((greater, p) => {\r\n    greater = p.installments > greater ? p.installments : greater;\r\n    return greater;\r\n  }, 0);\r\n\r\n  let cartTotal = {\r\n    productQuantity,\r\n    installments,\r\n    totalPrice,\r\n    currencyId: 'USD',\r\n    currencyFormat: '$'\r\n  };\r\n\r\n  dispatch({\r\n    type: UPDATE_CART,\r\n    payload: cartTotal\r\n  });\r\n};\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\total\\actionTypes.js":{"language":"javascript","mutants":[{"id":"361","location":{"end":{"column":41,"line":1},"start":{"column":28,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const UPDATE_CART = 'UPDATE_CART';\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\total\\reducer.js":{"language":"javascript","mutants":[{"id":"376","location":{"end":{"column":2,"line":11},"start":{"column":22,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"377","location":{"end":{"column":4,"line":10},"start":{"column":9,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"378","location":{"end":{"column":22,"line":8},"start":{"column":17,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"379","location":{"end":{"column":24,"line":9},"start":{"column":21,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"380","location":{"end":{"column":2,"line":23},"start":{"column":55,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"381","location":{"end":{"column":9,"line":19},"start":{"column":5,"line":15}},"mutatorName":"ConditionalExpression","replacement":"case UPDATE_CART:","status":"Survived"},{"id":"382","location":{"end":{"column":8,"line":19},"start":{"column":14,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"383","location":{"end":{"column":20,"line":21},"start":{"column":5,"line":20}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Killed"}],"source":"import { UPDATE_CART } from './actionTypes';\r\n\r\nconst initialState = {\r\n  data: {\r\n    productQuantity: 0,\r\n    installments: 0,\r\n    totalPrice: 0,\r\n    currencyId: 'USD',\r\n    currencyFormat: '$'\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_CART:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\setupTests.js":{"language":"javascript","mutants":[{"id":"391","location":{"end":{"column":44,"line":5},"start":{"column":18,"line":5}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import React from 'react';\r\nimport Enzyme, { shallow, render, mount } from 'enzyme';\r\nimport adapter from 'enzyme-adapter-react-16';\r\n\r\nEnzyme.configure({ adapter: new adapter() });\r\n\r\n/* Globals only for tests */\r\nglobal.React = React;\r\nglobal.shallow = shallow;\r\nglobal.render = render;\r\nglobal.mount = mount;\r\n"},"C:\\Shoppingtest\\react-shopping-cart\\src\\services\\util.js":{"language":"javascript","mutants":[{"id":"384","location":{"end":{"column":2,"line":8},"start":{"column":45,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"385","location":{"end":{"column":45,"line":4},"start":{"column":5,"line":3}},"mutatorName":"ConditionalExpression","replacement":"case 'BRL':","status":"Killed"},{"id":"386","location":{"end":{"column":15,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"387","location":{"end":{"column":38,"line":4},"start":{"column":35,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"388","location":{"end":{"column":43,"line":4},"start":{"column":40,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"389","location":{"end":{"column":27,"line":6},"start":{"column":5,"line":5}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Killed"},{"id":"390","location":{"end":{"column":67,"line":11},"start":{"column":3,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"export const formatPrice = (x, currency) => {\r\n  switch (currency) {\r\n    case 'BRL':\r\n      return x.toFixed(2).replace('.', ',');\r\n    default:\r\n      return x.toFixed(2);\r\n  }\r\n};\r\n\r\nexport const productsAPI =\r\n  'https://react-shopping-cart-67954.firebaseio.com/products.json';\r\n// export const productsAPI = \"http://localhost:8001/api/products\";\r\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};